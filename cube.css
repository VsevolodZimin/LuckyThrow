@font-face {
    font-family: 'Arsenal-Bold';
    src: url(./assets/fonts/ArsenalSC-Bold.ttf) format('truetype');
    font-weight: bold;
    font-style: normal;
}

@font-face {
    font-family: 'Arsenal-Regular';
    src: url(./assets/fonts/ArsenalSC-Regular.ttf);
    font-weight: normal;
    font-style: normal;
}

@font-face {
    font-family: 'Margarine4';
    src: url(./assets/fonts/Margarine-Regular.ttf) format('truetype');
    font-weight: normal;
    font-style: normal;
}


:root {
    --cubic-speed: 41deg;
    --cubic-height: -2.7rem;
    --cubic-size: 25rem;
    --gradient: linear-gradient(
        45deg, 
        rgb(255, 255, 255),
        rgb(255, 255, 255),
        rgb(238, 238, 238),
        rgb(170, 170, 170),
        rgb(78, 78, 78));
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html {
    font-size: 62.5%;
}

body {
    display: flex;
    flex-flow: column nowrap;
    justify-content: stretch;
    font-family: 'Arsenal-Regular';
    height: 100vh;
    width: 100vw;
}

.game--area {
    z-index: 100;
    width: 100%;
    height: 100%;
    display: flex;
    justify-items: center;
    align-content: center ;
    gap: 15rem;
    background-image: var(--gradient);
    position: relative;
    backdrop-filter: blur(1rem);
}


.gameover--screen {
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    font-size: 10rem;
    z-index: 3;
    transform: translate(-50%, -50%);
    position: absolute;
    top: 50%;
    left: 50%;
    border-radius: 5rem;
    z-index: 1;
    background-color: #ffffff00;
    width: 100%;
    height: 100%;
    visibility: hidden;
}

.gameover--screen span {
    visibility: hidden;
    filter: blur(3rem);
    user-select: none;
}


.gameover--screen--animation{
    animation: gameOverScreenAnimation 0.2s forwards;
}

.gameover--text--animation{
    animation: gameOverTextAnimation 0.2s forwards;
}

@keyframes gameOverScreenAnimation{
    to {
        visibility: visible;
        backdrop-filter: saturate(0) blur(0.8rem);
    }
}

@keyframes gameOverTextAnimation{
    to {
        visibility: visible;
        filter: blur(0);
    }
}

.scene {
    perspective: 150rem;
    width: calc(1.5 * var(--cubic-size));
    height: calc(1.5 * var(--cubic-size));
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    transform-style: preserve-3d;
}

.result--text {
    visibility: hidden;
    font-size: 6rem;
    text-align: center;
}

.loss--animation {
    font-family: "Margarine4";
    animation: lossText linear 3s forwards;
}

.win--animation {
    font-family: "Arsenal-Bold-Italic";
    animation: winText linear 3s forwards;
}

.main--heading {
    font-size: 6rem;
}

.right--side {
    height: 50%;
    order: 2;
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: auto auto auto auto auto;
    align-items: center;
    align-self: center;
    justify-content: center;
    gap: 2rem;
}

.left--side{
    order: 1;
    display: flex;
    align-items: center;
    justify-content: flex-end;
    flex-flow: column nowrap;
    padding-bottom: 14rem;
    padding-left: 10rem;
}

.dale {
    font-family: 'Arsenal-Bold';
    margin-top: 4rem;
    font-size: 2.3rem;
    border-radius: 900px;
    width: 100%;
    height: 5rem;
    background-color: rgb(232, 232, 232);
    border: 1px solid rgb(79, 79, 79);
    grid-column: 1/3;
}

.active:hover {
    background-color: rgb(247, 33, 5);
    transition: all 0.5s;
    color: #ffffff;
}

.inactive {
    background-color: rgb(138, 138, 138);
    pointer-events: none;
}
.first--letter {
    font-size: 7rem;
    color:rgb(247, 33, 5);
}

.first--letter:hover {
    transition: color 0.5s;
    color: rgb(71, 138, 74);
}

header {
    font-size: 3rem;
    display: flex;
    grid-column: 1/3;
    align-items: center;
    justify-content: start;
    padding-bottom: 5rem;
    position: relative;
}

.clover {
    position: absolute;
    width: 10rem;
    left: 95%;
    animation: float 1s ease-in-out infinite alternate;
}

.menu--value {
    padding-left: 4rem;
    padding-bottom: 1rem;
    padding-top: 1rem;
}

.menu--field--name {
    font-weight: 300;
}

.field {
    border: 0.1rem solid rgb(48, 48, 48);
    position: relative;
    text-align: center;
    font-size: 3rem;
    width: 30rem;
    height: 5rem;
    border-radius: 900px;
}

.field--error--animation {
    animation: error 0.2s linear 2 forwards;
}

@keyframes error {
    0% {
        border: 3px solid red;
    }

    33.33%{
        transform: translateX(-10px);
        border: 3px solid red;

    }
    66.66%{
        transform: translateX(10px);
        border: 3px solid red;
    }
    100% {
        transform: translateX(0px);
        border: 3px solid red;
    }
}



.field:hover {
    border: 0.2rem solid rgb(252, 74, 51);
}

.field:focus {
    border: 0.2rem solid rgb(252, 74, 51);
    outline: none;
}

.num {
    color: rgb(222, 32, 7);
    text-decoration: underline solid 2px;
    text-underline-offset: 4px;
}


.shadow{
    width: calc(1 * var(--cubic-size));
    height: calc(1 * var(--cubic-size));
    position: absolute;
    right: 300px;
    bottom: 90px;
    border-radius: 500px;
    transform-origin: calc(var(--cubic-size)) calc(var(--cubic-size)) 0px;
    transform: rotateX(30deg) rotateY(180deg) translateZ(calc(var(--cubic-size))) ;
}

.cube{
    width: var(--cubic-size);
    height: var(--cubic-size);
    top: calc(50% - calc(0.4 * var(--cubic-size)));
    left: calc(50% - calc(0.5 * var(--cubic-size)));
    position: absolute;
    transform-origin: calc(0.5 * var(--cubic-size)) calc(0.5 * var(--cubic-size)) 0;
    transform-style: preserve-3d;
}


.animate--cube {
    animation: 
        toss1 0.5s cubic-bezier(0.53, 0.52, 0.86, 0.87), 
        drop1 0.5s cubic-bezier(0.36, 0.33, 1, 1.04) 0.5s, 
        toss2 0.5s cubic-bezier(0.53, 0.52, 0.78, 0.96) 1s, 
        drop2 0.5s cubic-bezier(0.36, 0.33, 1, 1.04) 1.5s forwards, 
        result 2s 2s forwards;
}

.problem {
    color: red;
    width: 35ch;
    font-size: 1.5rem;
    font-weight: bold;
    text-align: center;
}

.animate--shadow {
    animation: shadow 2s forwards;
}

@keyframes toss1 {
    0% {
        transform: translateY(0) rotateX(0) rotateY(0);
    }
    100% {
        transform: translateY(calc(15 * var(--cubic-height))) rotateX(calc(13 * var(--cubic-speed))) rotateY(calc(5 * var(--cubic-speed)));
    }
}

@keyframes drop1 {
    0% {
        transform: translateY(calc(15.5 * var(--cubic-height))) rotateX(calc(13.1 * var(--cubic-speed))) rotateY(calc(5 * var(--cubic-speed)));
    }
    100% {
        transform: translateY(0) rotateX(calc(26 * var(--cubic-speed))) rotateY(calc(5 * var(--cubic-speed)));
    }
}

@keyframes toss2 {
    0% {
        transform: translateY(0) rotateX(calc(26 * var(--cubic-speed))) rotateY(calc(5 * var(--cubic-speed)));
    }
    100% {
        transform: translateY(calc(6 * var(--cubic-height))) rotateX(calc(13 * var(--cubic-speed))) rotateY(calc(4 * var(--cubic-speed)));
    }
}

@keyframes drop2 {
    0% {
        transform: translateY(calc(6 * var(--cubic-height))) rotateX(calc(13 * var(--cubic-speed))) rotateY(calc(4 * var(--cubic-speed)));
    }
    100% {
        transform: translateY(0) rotateX(calc(3 * var(--cubic-speed))) rotateY(calc(4 * var(--cubic-speed)));
    }
}

@keyframes shadow {
    0% {
        width: calc(1 * var(--cubic-size));
        height: calc(1 * var(--cubic-size));
        background-color: #5c5c5c;
    }
    30% {
        width: calc(0.3 * var(--cubic-size));
        height: calc(0.3 * var(--cubic-size));
        right: 550px;
        bottom: 180px;
        background-color: #e9e9e9;
    }
    50%{
        width: calc(0.9 * var(--cubic-size));
        height: calc(0.9 * var(--cubic-size));
        right: 330px;
        bottom: 120px;
        background-color: #979696;

    }

    80%{
        width: calc(0.7 * var(--cubic-size));
        height: calc(0.7 * var(--cubic-size));
        right: 410px;
        bottom: 125px;
        background-color: #d4d3d3;

    }
    99% {
        width: calc(1 * var(--cubic-size));
        height: calc(1 * var(--cubic-size));
        background-color: #9b9b9b;
    }
    100% {
        background-color: rgba(172, 255, 47, 0);
    }

}

@keyframes result {
    to {
        transform: rotateX(90deg)  rotateY(180deg);
    }
}

@keyframes float {
    0% {
        transform: translateY(0%);
    }
    100% {
        transform: translateY(20%);
    }
}

@keyframes lossText {
    0% {
        visibility: visible;
        color: rgba(255, 42, 0, 0);
    }
    50% {
        color: rgba(255, 42, 0, 0.551);
        transform: translateY(-5rem);
    }
    100% {
        visibility: visible;
        color: rgb(255, 42, 0);
        transform: translateY(-10rem);

    }
}
@keyframes winText {
    0% {
        visibility: visible;
        color: rgba(0, 128, 255, 0);
    }
    50% {
        color: rgba(0, 128, 255, 0.517);
        transform: translateY(-5rem);
    }
    100% {
        visibility: visible;
        color: rgb(0, 128, 255);
        transform: translateY(-10rem);

    }
}

.side {
    font-size: 3rem;
    display: flex;
    align-items: center;
    justify-content: center;
    position:absolute;
    width: var(--cubic-size);
    height: var(--cubic-size);
    background-color: rgba(0, 255, 255, 0.589);
}

.side img {
    width: 100%;
    height: 100%;
    border: #5c5c5c solid 1px;
}

.front {
    transform: translateZ(calc(0.5 * var(--cubic-size)));
    background-color: #dddddd;
}

.back {
    transform: rotateY(180deg) translateZ(calc(0.5 * var(--cubic-size)));
    background-color: #dddddd;
}

.top {
    transform: rotateX(90deg) translateZ(calc(0.5 * var(--cubic-size)));
    background-color: #dddddd;
}

.bottom {
    transform: rotateX(-90deg) translateZ(calc(0.5 * var(--cubic-size)));;
    background-color: #dddddd;

}

.right {
    transform: rotateY(90deg) translateZ(calc(0.5 * var(--cubic-size))) ;
    background-color: #dddddd;

}

.left {
    transform:  rotateY(-90deg) translateZ(calc(0.5 * var(--cubic-size)));
    background-color: #dddddd;
}